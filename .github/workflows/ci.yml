name: Terraform CI

on:
  push:
    branches:
      - main
      - 'releases/**'

jobs:
  terraform-check:
    runs-on: ubuntu-latest
    environment: dev
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: read
      security-events: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check

      - name: Run Trivy vulnerability scanner in IaC mode
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'config'
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-southeast-1
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}

      - name: Terraform Init
        id: init
        run: terraform init -input=false

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false
        continue-on-error: true

  terraform-apply:
    runs-on: ubuntu-latest
    needs: [terraform-check]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-southeast-1
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}

      - name: Terraform Init
        id: init
        run: terraform init -input=false

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -no-color -input=false
